/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hill;

import javax.swing.JOptionPane;

/**
 *
 */
public class HillcipherDecryption extends javax.swing.JFrame {

    /**
     * Creates new form HillcipherDecryption
     */
    public HillcipherDecryption() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        input_textField = new javax.swing.JTextField();
        output_textField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        decrypted_text_textField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        input_textField.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        output_textField.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        jLabel14.setText("Plain Text");

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        jLabel15.setForeground(java.awt.Color.red);
        jLabel15.setText("(~Encryption~)");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        jLabel6.setText("Cipher Text ");

        jButton1.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jButton1.setText("Encrypt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hill Cipher Decryption");
        setResizable(false);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel8.setText("a");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel9.setText("b");

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        jLabel16.setText("Cipher Text ");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel10.setText("c");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        jLabel17.setText("Plain Text");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel11.setText("d");

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(153, 0, 153));
        jLabel18.setText("~Hill Cipher~ ");

        jTextField4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jTextField5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jTextField6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jTextField7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel12.setText("Enter Key Matrix : ");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 153));
        jLabel5.setText("(~Decryption~)");

        decrypted_text_textField.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jButton2.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(153, 0, 153));
        jButton2.setText("Decrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jButton3.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(153, 0, 153));
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.red);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(decrypted_text_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(12, 12, 12)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel11)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel18)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel5)))))
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel18)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decrypted_text_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //-------------------------------------------------//
    // Function to check the filed is empty or not and vildation;
    // key_a --> jTextField4
    // key_b --> jTextField5
    // key_c --> jTextField6
    // key_d --> jTextField7
    boolean vild1 = true;

    public boolean emptyFiledKeyandDecncrptText() {
        if (jTextField4.getText().trim().isEmpty() || jTextField5.getText().trim().isEmpty()
                || jTextField6.getText().trim().isEmpty() || jTextField7.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Matrix Number");

            return vild1 = false;

        }

        if (jTextField1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter text to Decrypt");

            return vild1 = false;

        }

        return vild1;
    }

    // end Function//
    //-------------------------------------------------//

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        emptyFiledKeyandDecncrptText();

        String str = jTextField1.getText();

        try {

            decrypted_text_textField.setText(decrypt(str));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            //Logger.getLogger(Hill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// Clear the all Fileds
   jLabel1.setText(null);
        jTextField1.setText(null);
        jTextField4.setText(null);
        jTextField5.setText(null);
        jTextField6.setText(null);
        jTextField7.setText(null);
        decrypted_text_textField.setText(null);

    }//GEN-LAST:event_jButton3ActionPerformed

    // inalization of variables
    int key_a;
    int key_b;
    int key_c;
    int key_d;

    int block_size = 2;
    String allChar = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

    public String decrypt(String input) throws Exception {
        String plainText = "";
        input = input.replaceAll(" ", "");

        input = input.toUpperCase();

        int len = input.length();

        for (int i = 0; i < len - 1; i = i + block_size) {
            plainText += decryptBlock(input.substring(i, i + block_size));
            plainText += " ";
        }
        return plainText;
    }

    public String decryptBlock(String cipher) throws Exception {
        // get the Keys from User
        key_a = Integer.parseInt(jTextField4.getText());
        key_b = Integer.parseInt(jTextField5.getText());
        key_c = Integer.parseInt(jTextField6.getText());
        key_d = Integer.parseInt(jTextField7.getText());

        //-------------------------------------------
        // insert the keys by user in the matrix
        int key_matrix[][] = {{key_a, key_c}, {key_b, key_d}};

        int e;

        String plain = "";

        //step1 of finding the inverse; finding the determient
        int detr = (key_a * key_d) - (key_c * key_b);
        if (detr < 0) {
            detr = 26 + (detr);
        }

        for (e = 0; e <= 100; e++) {

            int inverst = (detr * e) % 26;

            if (inverst == 1) {

                break;
            }
            if (e >= 100) {
                 jLabel1.setText("The matrix is not invertible");
                return plain = "";

            }

        }
          //-------------------------------------------------
              
        // calculating (determinat MOD 26)   
        if (key_c > 26) {
            key_c = key_c % 26;
        } else if (key_c < 26) {
            key_c = 26 - key_c;
        }

        if (key_b > 26) {
            key_b = key_b % 26;
        } else if (key_b < 26) {
            key_b = 26 - key_b;
        }
        //--------------------------------------------------
        
        //step 2 + step 3; finding the adjugate matrix and MOD 26

        int inverskey[][] = {{(e * key_d) % 26, ((e * (key_c % 26)) % 26)}, {(e * (key_b % 26)) % 26, (e * key_a) % 26}};
        //--------------------------------------------------------------------------------------------
        
        
        //DECRYPTION
        cipher = cipher.toUpperCase();
        int a[][] = new int[block_size][1];
        int sum = 0;
        int plainMatrix[][] = new int[block_size][1];
        plain = "";

        for (int i = 0; i < block_size; i++) {
            a[i][0] = indexOfChar(cipher.charAt(i));

        }

        for (int i = 0; i < block_size; i++) {
            for (int j = 0; j < 1; j++) {
                for (int k = 0; k < block_size; k++) {
                    sum = sum + inverskey[i][k] * a[k][j];

                }

                while (sum < 0) {
                    sum += 26;
                }

                while (sum >= 26) {

                    sum = sum - 26;
                }

                plainMatrix[i][j] = sum;

                sum = 0;
            }
        }

        for (int i = 0; i < block_size; i++) {
            plain += charAtIndex(plainMatrix[i][0]);
        }
        return plain;
    }

    public int indexOfChar(char c) {
        for (int i = 0; i < allChar.length(); i++) {
            if (allChar.charAt(i) == c) {
                return i;
            }
        }

        return -1;
    }

    public char charAtIndex(int pos) {
        return allChar.charAt(pos);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HillcipherDecryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HillcipherDecryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HillcipherDecryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HillcipherDecryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HillcipherDecryption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField decrypted_text_textField;
    private javax.swing.JTextField input_textField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField output_textField;
    // End of variables declaration//GEN-END:variables
}
